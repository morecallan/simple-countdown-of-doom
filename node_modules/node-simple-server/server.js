"use strict";
var http 	= require('http'),
	fs 		= require('fs'),
	path 	= require('path'),
	url 	= require('url'),
	mime	= {
		'html' : 'text/html',
		'htm'  : 'text/html',
		'txt'  : 'text/plain',
		'css'  : 'text/css',
		'js'   : 'application/javascript',
		'png'  : 'image/png',
		'jpg'  : 'image/jpeg',
		'jpeg' : 'image/jpeg',
		'gif'  : 'image/gif'
	};

// 读取配置文件
var CONF = JSON.parse(fs.readFileSync('server.conf'));

// 创建服务器
http.createServer(function (req, res) {
	var reqUrl, ext, targetFile, pathname;

	req.setEncoding(CONF.encoding);

	reqUrl 	= url.parse(req.url);
	pathname= reqUrl.pathname;
	
	(pathname in CONF.rewrite) && (pathname = CONF.rewrite[pathname]);

	targetFile 	= path.join(CONF.root, pathname.substr(1));
	ext 		= path.extname(pathname).substr(1);

	// 获取目录中的默认文件名
	var _flag = !!ext;
	if (!_flag) {
		(CONF.index || []).forEach(function (it) {
			if (_flag) return ;
			targetFile = path.join(targetFile, it);
			if (fs.existsSync(targetFile)) {
				ext = path.extname(it).substr(1);
				_flag = true;
			}
		});
	}

	console.log('request file: ' + targetFile);

	// 文件存在
	if (_flag && fs.existsSync(targetFile) && (ext === 'njs' || (ext in mime))) {
		
		if (ext === 'njs') {
			var buffer = [], child ;
			child = require('child_process').spawn('node', [targetFile, reqUrl.query || '']);
			child.stdout.on('data', function (data) {
				buffer.push(data);
			});
			child.stderr.on('data', function (data) {
				res.writeHead(500, {'Content-Type': 'text/html'});
				res.end(data);
			})
			child.on('close', function (code) {
				res.writeHead(200, {'Content-Type': 'text/html'});
				res.end(buffer.join(''));
			});
		} else {
			res.writeHead(200, {'Content-Type': mime[ext]});
			res.end(fs.readFileSync(targetFile));
		}
	} else {
		res.writeHead(404, {'Content-Type': 'text/html'});
		res.end('<h1>Not Found or File Extension Not Supported</h1>');
	}
}).listen(CONF.port);

console.log('Server listen on localhost:' + CONF.port);